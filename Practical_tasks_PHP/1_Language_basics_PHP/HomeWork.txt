Основы языка PHP

1. Hello World

Выведите строку через echo: «Меня зовут ИМЯ». Вместо ИМЯ напишите своё имя.
Сделайте своё имя внутри тега <b>.</b>
Ознакомьтесь со справочником php.net (зайдите в различные раздeлы, почитайте, попытайтесь понять то, что там написано).
 

2. Переменные и их типы

Создайте целую переменную с именем age и установите значение у неё в виде Вашего возраста.
Создайте строковую переменную со значением: «Мой возраст $age лет» и выведите её.
Создайте вещественную переменную с любым значением и выведите её.
Создайте и выведите булевскую переменную со значением true, а после поменяйте на false и посмотрите, что изменилось в выводе.
Создайте переменную со значением null и выведите её. Объясните самому себе, чем отличается null от false, 0 и пустой строки?

3. Действия с переменными

Создайте переменную x с любым значением.
Выведите результат работы isset(x) и isset(y). Объясните самому себе, что делает isset().
Найдите в справочнике php.net функцию проверки переменной на целое значение.
Создайте целую переменную и воспользуйтесь функцией из 3-го пункта для проверки значения на целое число.

4. Ссылочные переменные

Создайте переменную a и жёсткую ссылку b на неё.
Измените значение b и выведите значения a и b через echo. Поясните результат.
Сделайте символическую ссылку на переменную a.
Выведите значение переменной a, используя символическую ссылку из 3-го пункта.

5. Константы

Создайте константу с размером шрифта.
Создайте простую HTML-страницу (обязательно с DOCTYPE и всеми базовыми HTML-тегами: html, head, body).
Выведите пару абзацев текста с помощью тега <p>, безусловно, внутри <body>.
Установите размер текста для тега <p> в теге <style> внутри тега <head>, подставив значение из константы, созданной в 1-м пункте.
Примечание: Если забыли, как использовать тег <style>, то посмотрите здесь: http://htmlbook.ru/html/style

6. Математические операции

Создайте переменные: одну – целую, другую – вещественную.
Выведите результат их сложения, вычитания, произведения, деления.
Извлеките кубический корень из целой переменной и выведите результат.
Сделайте инкремент целой переменной и выведите её.
Сделайте 2 декремента целой переменной и выведите её.

7. Строковые операции

Создайте строковые переменные со следующими значениями: «Мой возраст» и «30 лет».
Создайте третью строковую переменную со значением в виде конкатенации строк первой переменной, пробела и второй переменной из 1-го пункта.
Выведите получившуюся переменную.
Создайте строку, состоящую из 3-х обратных слешей (безусловно, их придётся в строке написать побольше, чтобы в итоге вывелось 3) и выведите её. Должно появиться следующее: \\\
* Откройте текстовый файл в «Блокноте» или любом другом редакторе с помощью скрипта на PHP.

8. Логические операции

Создайте две численных переменных.
Выведите результат сравнения на >, <, ==, ===.
Напишите произвольное сложное логическое выражение с использованием скобок и всех логических операций: ОТРИЦАНИЕ, И, ИЛИ, ИСКЛЮЧАЮЩЕЕ ИЛИ.
Самостоятельно попытайтесь найти ответ.
Выведите результат в PHP и сверьтесь с тем, что насчитали Вы. Если ошиблись при расчёте, вернитесь к пункту 3.

9. Оператор if-else

Создайте переменную со значением в виде Вашего возраста.
Выведите строку «Вам меньше 30 лет», если значение переменной меньше 30, «Вам 30 лет», если значение переменной 30 и «Вам больше 30 лет», если значение переменной больше 30.
Создайте простую форму для ввода возраста.
Получите из формы данные и запишите их в переменную из 1-го пункта.
Выведите результат 2-го пункта для уже значения, присланного пользователем из формы. Например, если он вводит 35, должна появиться строка: «Вам больше 30 лет».
Примечание: Всё это с помощью конструкции if -else.

10. Цикл for

Создайте простую форму для ввода числа.
Если пользователь введёт число меньше 0, то вывести строку: «Число должно быть 0 или больше 0».
Если число корректное, то найдите и выведите факториал введённого числа с помощью цикла for.
Примечание: Факториал n = 1 * 2 * 3 * 4 * 5 * … * n, а факториал 0 = факториал 1 = 1

11. Цикл while и do-while

Перепишите задачу из предыдущего упражнения с использованием цикла while.
Вычислите и выведите сумму чётных чисел от 10 до 40. То есть найдите сумму: 10 + 12 + 14 + 16 + … + 38 + 40

12. Оператор switch-case

Выведите форму, куда пользователь будет вводить число.
С помощью switch-case выведите строковое представление введённого числа. Например, если пользователь ввёл число 3, надо вывести «три», если 5, то надо вывести «пять».
Если пользователь делает ввод числа, представления для которого у Вас нет, надо вывести строку: «Нет представления этого числа в виде строки».

13. Массивы и списки

Создайте массив из 10 различных чисел.
Найдите и выведите сумму всех элементов массива из 1-го пункта, используя цикл for.
Повторите пункт 2, но с использованием цикла while.

14. Цикл foreach

Создайте ассоциативный массив с сотрудниками, где каждый сотрудник будет представлять из себя массив со следующими ключами: name и age. Фактически, это будет двумерный массив.
Найдите средний возраст сотрудников и выведите его.
Примечание: Для поиска среднего надо найти сумму возрастов всех сотрудников, а потом разделить эту сумму на их количество.

15. Операции с массивами

Создайте 2 массива с целыми числами: по 5 и 7 элементов соответственно.
Объедините 2 массива в 1.
Выведите все чётные числа из получившегося массива.

16. Функции

Напишите функцию, которая принимает массив, а возвращает сумму его элементов. Если передан не массив, либо в нём нет элементов, либо некоторые элементы не являются числами, то должно возвращаться false.
Создайте несколько массивов для последующей передачи их в функцию из 1-го пункта. Массивы должны быть такими, чтобы детально проверить написанную функцию.
Передавайте все массивы и смотрите на получившийся результат. Если функция возвращает false, то выводить строку: «Некорректный массив», если идёт число, то выводить: «Сумма элементов массива равна …».

17. Область видимости переменных

Создайте две числовые переменные.
Напишите функцию, которая будет брать две переменные из 1-го пункта и выводить их сумму.
Вызовите эту функцию.

18. Рекурсия в функциях

Напишите рекурсивную функцию, которая будет принимать 2 параметра: a и b - и возвращать число a в степени b.
Проверьте функцию.
Примечание: Ключевой строкой будет что-то типа этого: return $a * func($a, $b – 1); - то есть углубляться внутрь до тех пор, пока $b не станет равной 0. Когда это будет, возвращаем 1 и начинаем подниматься вверх вплоть до выхода.

19. Анонимные функции

Создайте анонимную функцию и поместите её в переменную. Функция должна просто возвращать сумму двух переданных параметров.
Вызовите эту анонимную функцию с помощью переменной.
Создайте ещё одну функцию, которая принимает массив с чётным количеством элементов в виде чисел, а также принимает вторым параметром функцию.
Внутри этой функции перебирайте сразу по 2 элемента в массиве и выводите результат вызова переданной функции, передавая ей по 2 этих элемента.
Вызовите функцию из 3-го пункта, передав ей массив с 4 числами, а также функцию из 1-го пункта.

20. Генераторы

Создайте анонимную функцию и поместите её в переменную. Функция должна принимать массив и возвращать среднее значение всех элементов.
Создайте функцию-генератор, принимающую двумерный массив и функцию. Эта функция на каждой итерации должна возвращать среднее значение текущего массива.
Создайте двумерный массив из чисел.
С помощью foreach выведите все средние значения элементов двумерного массива.

21. Отладочные функции

Создайте трёхмерный ассоциативный массив.
Выведите его с помощью print_r().
Напишите функцию, которая будет выводить результат print_r(), но внутри тега <pre>.
Воспользуйтесь этой функцией, передав ей массив из 1-го пункта. Поясните, что изменилось в выводе и почему.

22. Массив $_SERVER

Выведите некоторые данные в браузер, в таком виде: «Ваш IP-адрес: …<br />Ваш браузер: …».
Примечание: Все эти данные можно получить из массива $_SERVER. Если забыли, какие ключи и за что отвечают, то выведите его с помощью print_r().

23. Обработка форм

Создайте форму с method=”post”.
В форме должны быть текстовая область (textarea) и кнопка.
В обработчике необходимо принять строку из текстовой области.
Создайте массив, где каждый элемент будет содержать 1 символ из переданной строки.
Удалите каждый чётный элемент (то есть 0, 2, 4 и так далее).
Соедините все элементы получившегося массива в одну строку и выведите её.
Примечание: Должно получиться что-то наподобие этого: пришла строка «Моя строка», а выйти в браузер должно: «о тоа».

24. Инструкции include и require

Напишите функцию, которая будет выполнять задачу из предыдущего упражнения. То есть принимает строку, а возвращает строку без символов на чётных позициях.
Поместите эту функцию в отдельный файл и отправьте этот файл в директорию lib рядом с index.php
В index.php подключите этот файл и воспользуйтесь написанной функцией при обработке формы.